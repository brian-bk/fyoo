version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test-python-install:
          name: test-python-3.6
          version: "3.6"
          requires:
            - build
      - test-python-install:
          name: test-python-3.7
          version: "3.7"
          requires:
            - build
      - test-python-install:
          name: test-python-3.8
          version: "3.8"
          requires:
            - build
      - test-python-install:
          name: test-python-latest
          requires:
            - build
      - deploy:
          requires:
            - build
            - test-python-install
          filters:
            tags:
              only:
                - /[0-9]+(\.[0-9]+)*/
                - /[0-9]+(\.[0-9]+)*(alpha|beta|rc)([0-9]+)*/
            branches:
              ignore: /.*/
jobs:
  build:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
            codecov
      - store_artifacts:
          path: htmlcov/
  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
            codecov
      - store_artifacts:
          path: htmlcov/
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: check package pypi
          command: |
            . venv/bin/activate
            twine check dist/*
      - run:
          name: Smoke Test Install
          command: |
            python --version
            REPO_DIR="${PWD}"
            cd "$(mktemp -d)"
            sudo pip3 install "${REPO_DIR}"
            fyoo --set=lib=fyoo -- pip show '{{ lib }}'
            python3 -m fyoo -- echo "Today is {{ date() }}"
  deploy:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
